{"changed":false,"filter":false,"title":"negaposi-analyzer-ja.js","tooltip":"/node_modules/negaposi-analyzer-ja/lib/negaposi-analyzer-ja.js","value":"// MIT © 2017 azu\n\"use strict\";\n\nvar debug = require(\"debug\")(\"negaposi-analyzer-ja\");\n/**\n * それぞれの単語の数\n * posi: nega = 5122 : 49983\n * 1   : 1    = 1 : 0.102474841\n * @type {{good: number, bad: number, zero: number}}\n */\nvar posiNegaRatio = {\n    posi: 5122,\n    nega: 49983,\n    zero: 20\n};\nvar defaultOptions = {\n    // 辞書にない単語のスコア\n    unknownWordRank: 0,\n    // ポジティブな単語に対する補正値(スコアに乗算)\n    positiveCorrections: 1,\n    // ネガティブな単語に対する補正値(スコアに乗算)\n   negativeCorrections: posiNegaRatio.posi / posiNegaRatio.nega,\n    // negativeCorrections: 1,\n    \n    // 辞書の配列\n    posiNegaDict: require(\"../dict/pn_ja.dic.json\")\n};\n/**\n * @param {Object[]} tokens kuromoji.jsのtoken配列\n * @param {Object} options\n */\nmodule.exports = function (tokens) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (tokens.length === 0) {\n        return 0;\n    }\n    var score = 0;\n    let countUnknownWord = 0;\n    const isKnownWord = []\n    \n    var unknownWordRank = options.unknownWordRank || defaultOptions.unknownWordRank;\n    var posiNegaDict = options.posiNegaDict || defaultOptions.posiNegaDict;\n    var negativeCorrections = options.negativeCorrections || defaultOptions.negativeCorrections;\n    var positiveCorrections = options.positiveCorrections || defaultOptions.positiveCorrections;\n    debug(\"Options: %o\", {\n        unknownWordRank: unknownWordRank,\n        negativeCorrections: negativeCorrections,\n        positiveCorrections: positiveCorrections\n    });\n    var scoreToken = function scoreToken(token) {\n        // まずは緩く取得\n        var foundDictionaries = posiNegaDict.filter(function (dict) {\n        return dict[\"reading\"] === token[\"reading\"] && dict[\"posi\"] === token[\"posi\"];\n        // return dict[\"surface\"] === token[\"basic_form\"] && dict[\"posi\"] === token[\"posi\"];\n        // return dict[\"surface\"] === token[\"basic_form\"] && dict[\"reading\"] === token[\"reading\"] && dict[\"posi\"] === token[\"posi\"];\n        });\n        // 複数候補が出たときは厳しく判定\n        var foundDict = foundDictionaries.length === 1 ? foundDictionaries[0] : foundDictionaries.find(function (dict) {\n            // return dict[\"surface\"] === token[\"surface_form\"];\n            return dict[\"surface\"] === token[\"basic_form\"];\n        });\n        if (foundDict) {\n            var rank = foundDict[\"rank\"];\n            // debug(token[\"surface_form\"], rank);\n            debug(token[\"basic_form\"], rank);\n            if (rank > 0) {\n                return rank * positiveCorrections;\n            } else if (rank < 0) {\n                return rank * negativeCorrections;\n            }\n            return rank;\n        } else {\n            countUnknownWord++;\n            return unknownWordRank;\n        }\n    };\n    tokens.forEach(function (token) {\n        const scoreCurrent = scoreToken(token);\n        score += scoreCurrent;\n        isKnownWord.push(scoreCurrent !== unknownWordRank)\n    });\n    \n    const analyzeData = {\n        score: score / (tokens.length - countUnknownWord),\n        isKnownWord: isKnownWord\n    }\n    \n    return analyzeData;\n};\n//# sourceMappingURL=negaposi-analyzer-ja.js.map","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":82,"column":4},"end":{"row":82,"column":4},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1567145186053}